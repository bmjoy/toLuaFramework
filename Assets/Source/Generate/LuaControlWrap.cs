//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaControlWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaControl), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Start", Start);
		L.RegFunction("OnDestroy", OnDestroy);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ClassName", get_ClassName, set_ClassName);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaControl obj = (LuaControl)ToLua.CheckObject<LuaControl>(L, 1);
			LuaInterface.LuaState arg0 = (LuaInterface.LuaState)ToLua.CheckObject<LuaInterface.LuaState>(L, 2);
			obj.Start(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaControl obj = (LuaControl)ToLua.CheckObject<LuaControl>(L, 1);
			LuaInterface.LuaState arg0 = (LuaInterface.LuaState)ToLua.CheckObject<LuaInterface.LuaState>(L, 2);
			obj.OnDestroy(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ClassName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaControl obj = (LuaControl)o;
			string ret = obj.ClassName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ClassName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ClassName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaControl obj = (LuaControl)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ClassName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ClassName on a nil value");
		}
	}
}

